{"ast":null,"code":"import { css } from 'goober';\nimport React, { useRef, useEffect, useState, useCallback, useMemo } from 'react';\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\"\n};\nconst defaultProps = {\n  value: [],\n  focusSearchOnOpen: true,\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: []\n};\nconst MultiSelectContext = /*#__PURE__*/React.createContext({});\n\nconst MultiSelectProvider = ({\n  props,\n  children\n}) => {\n  const t = key => {\n    var _props$overrideString;\n\n    return ((_props$overrideString = props.overrideStrings) == null ? void 0 : _props$overrideString[key]) || defaultStrings[key];\n  };\n\n  return React.createElement(MultiSelectContext.Provider, {\n    value: {\n      t,\n      ...defaultProps,\n      ...props\n    }\n  }, children);\n};\n\nconst useMultiSelect = () => React.useContext(MultiSelectContext);\n/**\r\n * combines classNames in a friendly way\r\n *\r\n * @param {*} classes\r\n */\n\n\nconst cn = (...classes) => classes.join(\" \");\n/**\r\n * similar to `useEffect` but gets triggered only when value changes\r\n * @param fn executable function on dependency updates\r\n * @param inputs dependency array\r\n */\n\n\nfunction useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n  useEffect(() => {\n    if (didMountRef.current) fn();else didMountRef.current = true;\n  }, inputs);\n}\n\nconst debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n/**\r\n * Filters React Select options and sorts by similarity to a search filter.\r\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\r\n * Wallenberg Traditional High School\". Case insensitive. Ignores\r\n * non-alphanumeric characters.\r\n *\r\n * @param  options  An unfiltered list of Options.\r\n * @param? filter  A string to compare against Option labels.\r\n * @param? substitutions  Strings with multiple spellings or variations that we\r\n *           expect to match, eg. accented characters or abbreviated words.\r\n *\r\n * @return A filtered and sorted array of Options.\r\n */\n\n\nfunction filterOptions(options, filter, substitutions) {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return options // Filter out undefined or null Options.\n  .filter(({\n    label,\n    value\n  }) => label != null && value != null) // Create a {score, Option} pair for each Option based on its label's\n  // similarity to the filter text.\n  .map(option => ({\n    option: option,\n    score: typeaheadSimilarity(cleanUpText(option.label, substitutions), cleanFilter)\n  })) // Only include matches of the entire substring, with a slight\n  // affordance for transposition or extra characters.\n  .filter(pair => pair.score >= cleanFilter.length - 2) // Sort 'em by order of their score.\n  .sort((a, b) => b.score - a.score) // …and grab the original Options back from their pairs.\n  .map(pair => pair.option);\n}\n/**\r\n * Scores the similarity between two strings by returning the length of the\r\n * longest common subsequence. Intended for comparing strings of different\r\n * lengths; eg. when matching a typeahead search input with a school name.\r\n\n * Meant for use in an instant search box where results are being fetched\r\n * as a user is typing.\r\n *\r\n * @param  a  The longer string (though, we flip them if it's shorter).\r\n * @param  b  The shorter string, eg. a typeahead search input.\r\n *\r\n * @return The length of the longest common subsequence. Higher scores indicate\r\n *           closer matches.\r\n */\n\n\nfunction typeaheadSimilarity(a, b) {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  } // Ensure `a` isn't shorter than `b`.\n\n\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  } // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n\n\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  } // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n\n\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  } // Populate the rest of the table with a dynamic programming algorithm.\n\n\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] = a[x - 1] === b[y - 1] ? 1 + table[x - 1][y - 1] : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n/**\r\n * Apply string substitutions, remove non-alphanumeric characters, and convert\r\n * all letters to uppercase.\r\n *\r\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\r\n *\r\n * @param  input  An unsanitized input string.\r\n * @param  substitutions  Strings with multiple spellings or variations that we\r\n *          expect to match, for example accented characters or abbreviated\r\n *          words.\r\n *\r\n * @return The sanitized text.\r\n */\n\n\nfunction cleanUpText(input, substitutions) {\n  if (!input) {\n    return \"\";\n  } // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n\n\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n\n  const safeSubstitutions = substitutions; // For Flow.\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n\nconst Cross = () => React.createElement(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  className: \"dropdown-search-clear-icon gray\"\n}, React.createElement(\"line\", {\n  x1: \"18\",\n  y1: \"6\",\n  x2: \"6\",\n  y2: \"18\"\n}), React.createElement(\"line\", {\n  x1: \"6\",\n  y1: \"6\",\n  x2: \"18\",\n  y2: \"18\"\n}));\n\nconst DefaultRenderer = /*#__PURE__*/css({\n  \"& input,& span\": {\n    verticalAlign: \"middle\",\n    margin: 0\n  },\n  span: {\n    display: \"inline-block\",\n    paddingLeft: \"5px\"\n  },\n  \"&.disabled\": {\n    opacity: 0.5\n  }\n});\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled\n}) => React.createElement(\"div\", {\n  className: cn(DefaultRenderer, \"item-renderer\", disabled && \"disabled\")\n}, React.createElement(\"input\", {\n  type: \"checkbox\",\n  onChange: onClick,\n  checked: checked,\n  tabIndex: -1,\n  disabled: disabled\n}), React.createElement(\"span\", null, option.label));\n/**\r\n * This component represents an individual item in the multi-select drop-down\r\n */\n\n\nconst ItemContainer = /*#__PURE__*/css({\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"block\",\n  padding: \"var(--rmsc-p)\",\n  outline: 0,\n  \"&:hover,&:focus\": {\n    background: \"var(--rmsc-hover)\"\n  },\n  \"&.selected\": {\n    background: \"var(--rmsc-selected)\"\n  }\n});\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  focused,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick\n}) => {\n  const itemRef = useRef();\n  useEffect(() => {\n    updateFocus(); // eslint-disable-next-line\n  }, [checked, focused]);\n\n  const toggleChecked = () => {\n    onSelectionChanged(!checked);\n  };\n\n  const handleClick = e => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  const updateFocus = () => {\n    if (focused && !disabled && itemRef) {\n      itemRef.current.focus();\n    }\n  };\n\n  const handleKeyDown = e => {\n    switch (e.which) {\n      case 13: // Enter\n\n      case 32:\n        // Space\n        toggleChecked();\n        break;\n\n      default:\n        return;\n    }\n\n    e.preventDefault();\n  };\n\n  return React.createElement(\"label\", {\n    className: cn(ItemContainer, \"select-item\", checked && \"selected\"),\n    role: \"option\",\n    \"aria-selected\": checked,\n    tabIndex: tabIndex,\n    ref: itemRef,\n    onKeyDown: handleKeyDown\n  }, React.createElement(ItemRenderer, {\n    option: option,\n    checked: checked,\n    onClick: handleClick,\n    disabled: disabled\n  }));\n};\n/**\r\n * This component represents an unadorned list of SelectItem (s).\r\n */\n\n\nconst SelectListUl = /*#__PURE__*/css({\n  margin: 0,\n  paddingLeft: 0,\n  li: {\n    listStyle: \"none\",\n    margin: 0\n  }\n});\nconst skipIndex = 2;\n\nconst SelectList = ({\n  options,\n  focusIndex,\n  onClick\n}) => {\n  const {\n    disabled,\n    value,\n    onChange,\n    ItemRenderer\n  } = useMultiSelect();\n\n  const handleSelectionChanged = (option, checked) => {\n    if (disabled) {\n      return;\n    }\n\n    onChange(checked ? [...value, option] : value.filter(o => o.value !== option.value));\n  };\n\n  return React.createElement(\"ul\", {\n    className: SelectListUl\n  }, options.map((o, i) => {\n    const tabIndex = i + skipIndex;\n    return React.createElement(\"li\", {\n      key: (o == null ? void 0 : o.key) || i\n    }, React.createElement(SelectItem, {\n      focused: focusIndex === tabIndex,\n      tabIndex: tabIndex,\n      option: o,\n      onSelectionChanged: c => handleSelectionChanged(o, c),\n      checked: value.find(s => s.value === o.value) ? true : false,\n      onClick: e => onClick(e, tabIndex),\n      itemRenderer: ItemRenderer,\n      disabled: o.disabled || disabled\n    }));\n  }));\n};\n/**\r\n * This component represents the entire panel which gets dropped down when the\r\n * user selects the component.  It encapsulates the search filter, the\r\n * Select-all item, and the list of options.\r\n */\n\n\nvar FocusType;\n\n(function (FocusType) {\n  FocusType[FocusType[\"SEARCH\"] = -1] = \"SEARCH\";\n  FocusType[FocusType[\"NONE\"] = 1] = \"NONE\";\n})(FocusType || (FocusType = {}));\n\nconst SelectSearchContainer = /*#__PURE__*/css({\n  width: \"100%\",\n  position: \"relative\",\n  borderBottom: \"1px solid var(--rmsc-border)\",\n  input: {\n    height: \"var(--rmsc-h)\",\n    padding: \"0 var(--rmsc-p)\",\n    width: \"100%\",\n    outline: 0,\n    border: 0\n  }\n});\nconst SearchClearButton = /*#__PURE__*/css({\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  background: \"none\",\n  border: 0,\n  padding: \"0 calc(var(--rmsc-p)/2)\",\n  \"[hidden]\": {\n    display: \"none\"\n  }\n});\nconst NoOptions = /*#__PURE__*/css({\n  padding: \"var(--rmsc-p)\",\n  textAlign: \"center\",\n  color: \"var(--rmsc-gray)\"\n});\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    focusSearchOnOpen,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration\n  } = useMultiSelect();\n  const searchInputRef = useRef();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(focusSearchOnOpen && !disableSearch ? FocusType.SEARCH : FocusType.NONE);\n  const debouncedSearch = useCallback(debounce(query => setSearchTextForFilter(query), debounceDuration), []);\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\"\n  };\n\n  const selectAllValues = checked => {\n    const filteredValues = filteredOptions.filter(o => !o.disabled).map(o => o.value);\n\n    if (checked) {\n      const selectedValues = value.map(o => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n      return filteredOptions.filter(o => finalSelectedValues.includes(o.value));\n    }\n\n    return value.filter(o => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = checked => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = e => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    var _searchInputRef$curre;\n\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef == null ? void 0 : (_searchInputRef$curre = searchInputRef.current) == null ? void 0 : _searchInputRef$curre.focus();\n  };\n\n  const handleItemClicked = index => setFocusIndex(index);\n\n  const handleKeyDown = e => {\n    switch (e.which) {\n      case 38:\n        // Up Arrow\n        if (e.altKey) {\n          return;\n        }\n\n        updateFocus(-1);\n        break;\n\n      case 40:\n        // Down Arrow\n        if (e.altKey) {\n          return;\n        }\n\n        updateFocus(1);\n        break;\n\n      default:\n        return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const getFilteredOptions = async () => customFilterOptions ? await customFilterOptions(options, searchTextForFilter) : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = offset => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(1, newFocus);\n    newFocus = Math.min(newFocus, options.length + 1);\n    setFocusIndex(newFocus);\n  };\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter(o => !o.disabled);\n    return [filteredOptionsList.every(o => value.findIndex(v => v.value === o.value) !== -1), filteredOptionsList.length !== 0]; // eslint-disable-next-line\n  }, [filteredOptions, value]);\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n  return React.createElement(\"div\", {\n    className: \"select-panel\",\n    role: \"listbox\",\n    onKeyDown: handleKeyDown\n  }, !disableSearch && React.createElement(\"div\", {\n    className: SelectSearchContainer\n  }, React.createElement(\"input\", {\n    autoFocus: focusSearchOnOpen,\n    placeholder: t(\"search\"),\n    type: \"text\",\n    \"aria-describedby\": t(\"search\"),\n    onKeyDown: e => e.stopPropagation(),\n    onChange: handleSearchChange,\n    onFocus: handleSearchFocus,\n    value: searchText,\n    ref: searchInputRef\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: cn(SearchClearButton, \"search-clear-button\"),\n    hidden: !searchText,\n    onClick: handleClear,\n    \"aria-label\": t(\"clearSearch\")\n  }, ClearIcon || React.createElement(Cross, null))), hasSelectAll && hasSelectableOptions && React.createElement(SelectItem, {\n    focused: focusIndex === 1,\n    tabIndex: 1,\n    checked: isAllOptionSelected,\n    option: selectAllOption,\n    onSelectionChanged: selectAllChanged,\n    onClick: () => handleItemClicked(1),\n    itemRenderer: ItemRenderer,\n    disabled: disabled\n  }), filteredOptions.length ? React.createElement(SelectList, {\n    options: filteredOptions,\n    focusIndex: focusIndex,\n    onClick: (_e, index) => handleItemClicked(index)\n  }) : React.createElement(\"div\", {\n    className: cn(NoOptions, \"no-options\")\n  }, t(\"noOptions\")));\n};\n\nconst Arrow = ({\n  expanded\n}) => React.createElement(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  className: \"dropdown-heading-dropdown-arrow gray\"\n}, React.createElement(\"path\", {\n  d: expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"\n}));\n\nconst DropdownHeader = () => {\n  const {\n    t,\n    value,\n    options,\n    valueRenderer\n  } = useMultiSelect();\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map(s => s.label).join(\", \");\n\n  return noneSelected ? React.createElement(\"span\", {\n    className: \"gray\"\n  }, customText || t(\"selectSomeItems\")) : React.createElement(\"span\", null, customText || (allSelected ? t(\"allItemsAreSelected\") : getSelectedText()));\n};\n\nconst Spinner = /*#__PURE__*/css({\n  animation: \"rotate 2s linear infinite\",\n  \"& .path\": {\n    stroke: \"var(--rmsc-border)\",\n    strokeWidth: \"4px\",\n    strokeLinecap: \"round\",\n    animation: \"dash 1.5s ease-in-out infinite\"\n  },\n  \"@keyframes rotate\": {\n    \"100%\": {\n      transform: \"rotate(360deg)\"\n    }\n  },\n  \"@keyframes dash\": {\n    \"0%\": {\n      strokeDasharray: \"1,150\",\n      strokeDashoffset: 0\n    },\n    \"50%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-35\"\n    },\n    \"100%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-124\"\n    }\n  }\n});\n\nconst Loading = ({\n  size = 24\n}) => React.createElement(\"span\", {\n  style: {\n    width: size,\n    marginRight: \"0.2rem\"\n  }\n}, React.createElement(\"svg\", {\n  width: size,\n  height: size,\n  className: Spinner,\n  viewBox: \"0 0 50 50\",\n  style: {\n    display: \"inline\",\n    verticalAlign: \"middle\"\n  }\n}, React.createElement(\"circle\", {\n  cx: \"25\",\n  cy: \"25\",\n  r: \"20\",\n  fill: \"none\",\n  className: \"path\"\n})));\n/**\r\n * A generic dropdown component.  It takes the children of the component\r\n * and hosts it in the component.  When the component is selected, it\r\n * drops-down the contentComponent and applies the contentProps.\r\n */\n\n\nconst PanelContainer = /*#__PURE__*/css({\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  width: \"100%\",\n  paddingTop: \"8px\",\n  \".panel-content\": {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    borderRadius: \"var(--rmsc-radius)\",\n    background: \"var(--rmsc-bg)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1)\"\n  }\n});\nconst DropdownContainer = /*#__PURE__*/css({\n  position: \"relative\",\n  outline: 0,\n  backgroundColor: \"var(--rmsc-bg)\",\n  border: \"1px solid var(--rmsc-border)\",\n  borderRadius: \"var(--rmsc-radius)\",\n  \"&:focus-within\": {\n    boxShadow: \"var(--rmsc-main) 0 0 0 1px\",\n    borderColor: \"var(--rmsc-main)\"\n  }\n});\nconst DropdownHeading = /*#__PURE__*/css({\n  position: \"relative\",\n  padding: \"0 var(--rmsc-p)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"var(--rmsc-h)\",\n  cursor: \"default\",\n  outline: 0,\n  \".dropdown-heading-value\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    flex: 1\n  }\n});\nconst ClearSelectedButton = /*#__PURE__*/css({\n  cursor: \"pointer\",\n  background: \"none\",\n  border: 0,\n  padding: 0,\n  display: \"flex\"\n});\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon\n  } = useMultiSelect();\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n  const wrapper = useRef();\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = e => {\n    var _wrapper$current;\n\n    if (isInternalExpand) {\n      switch (e.which) {\n        case 27: // Escape\n\n        case 38:\n          // Up Arrow\n          setExpanded(false);\n          wrapper == null ? void 0 : (_wrapper$current = wrapper.current) == null ? void 0 : _wrapper$current.focus();\n          break;\n\n        case 32: // Space\n\n        case 13: // Enter Key\n\n        case 40:\n          // Down Arrow\n          setExpanded(true);\n          break;\n\n        default:\n          return;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  const handleHover = iexpanded => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = e => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return React.createElement(\"div\", {\n    tabIndex: 0,\n    className: cn(DropdownContainer, \"dropdown-container\"),\n    \"aria-labelledby\": labelledBy,\n    \"aria-expanded\": expanded,\n    \"aria-readonly\": true,\n    \"aria-disabled\": disabled,\n    ref: wrapper,\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, React.createElement(\"div\", {\n    className: cn(DropdownHeading, \"dropdown-heading\"),\n    onClick: toggleExpanded\n  }, React.createElement(\"div\", {\n    className: \"dropdown-heading-value\"\n  }, React.createElement(DropdownHeader, null)), isLoading && React.createElement(Loading, null), value.length > 0 && React.createElement(\"button\", {\n    type: \"button\",\n    className: cn(ClearSelectedButton, \"clear-selected-button\"),\n    onClick: handleClearSelected,\n    disabled: disabled,\n    \"aria-label\": t(\"clearSelected\")\n  }, ClearSelectedIcon || React.createElement(Cross, null)), React.createElement(FinalArrow, {\n    expanded: expanded\n  })), expanded && React.createElement(\"div\", {\n    className: cn(PanelContainer, \"dropdown-content\")\n  }, React.createElement(\"div\", {\n    className: \"panel-content\"\n  }, React.createElement(SelectPanel, null))));\n};\n\nconst MultiSelectBox = /*#__PURE__*/css({\n  \"--rmscMain\": \"#4285f4\",\n  \"--rmscHover\": \"#f1f3f5\",\n  \"--rmscSelected\": \"#e2e6ea\",\n  \"--rmscBorder\": \"#ccc\",\n  \"--rmscGray\": \"#aaa\",\n  \"--rmscBg\": \"#fff\",\n  \"--rmscP\": \"10px\",\n  \"--rmscRadius\": \"4px\",\n  \"--rmscH\": \"38px\",\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\"\n  },\n  \".gray\": {\n    color: \"var(--rmsc-gray)\"\n  }\n});\n\nconst MultiSelect = props => React.createElement(MultiSelectProvider, {\n  props: props\n}, React.createElement(\"div\", {\n  className: cn(MultiSelectBox, props.className || \"multi-select\")\n}, React.createElement(Dropdown, null)));\n\nexport default MultiSelect;\nexport { Dropdown, SelectItem, SelectPanel };","map":{"version":3,"sources":["../src/hooks/use-multi-select.tsx","../src/lib/classnames.ts","../src/hooks/use-did-update-effect.tsx","../src/lib/debounce.tsx","../src/lib/fuzzy-match-utils.tsx","../src/select-panel/cross.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/select-panel/index.tsx","../src/multi-select/arrow.tsx","../src/multi-select/header.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/multi-select/index.tsx"],"names":["defaultStrings","allItemsAreSelected","clearSearch","clearSelected","noOptions","search","selectAll","selectSomeItems","defaultProps","value","focusSearchOnOpen","hasSelectAll","className","debounceDuration","options","MultiSelectContext","React","MultiSelectProvider","children","t","key","props","useMultiSelect","cn","classes","useDidUpdateEffect","fn","inputs","didMountRef","useRef","useEffect","debounce","clearTimeout","timeout","setTimeout","func","filterOptions","filter","substitutions","cleanFilter","cleanUpText","label","option","score","typeaheadSimilarity","pair","b","a","aLength","bLength","table","x","y","Math","input","safeSubstitutions","unsubbed","output","Cross","width","height","fill","stroke","strokeWidth","x1","y1","x2","y2","DefaultRenderer","css","verticalAlign","margin","span","display","paddingLeft","opacity","DefaultItemRenderer","disabled","type","onChange","onClick","checked","tabIndex","ItemContainer","boxSizing","cursor","padding","outline","background","SelectItem","itemRenderer","ItemRenderer","itemRef","updateFocus","toggleChecked","onSelectionChanged","handleClick","e","focused","handleKeyDown","role","ref","onKeyDown","SelectListUl","li","listStyle","skipIndex","SelectList","handleSelectionChanged","o","i","focusIndex","c","s","FocusType","SelectSearchContainer","position","borderBottom","border","SearchClearButton","top","right","bottom","NoOptions","textAlign","color","SelectPanel","searchInputRef","useState","debouncedSearch","useCallback","query","setSearchTextForFilter","selectAllOption","selectAllLabel","selectAllValues","filteredValues","filteredOptions","selectedValues","finalSelectedValues","selectAllChanged","newOptions","handleSearchChange","setSearchText","setFocusIndex","handleClear","handleItemClicked","index","handleSearchFocus","getFilteredOptions","customFilterOptions","offset","newFocus","useMemo","filteredOptionsList","v","autoFocus","placeholder","onFocus","searchText","hidden","ClearIcon","isAllOptionSelected","Arrow","expanded","d","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","getSelectedText","Spinner","animation","strokeLinecap","transform","strokeDasharray","strokeDashoffset","Loading","size","style","marginRight","viewBox","cx","cy","r","PanelContainer","zIndex","paddingTop","maxHeight","overflowY","borderRadius","boxShadow","DropdownContainer","backgroundColor","borderColor","DropdownHeading","alignItems","overflow","textOverflow","whiteSpace","flex","ClearSelectedButton","Dropdown","ClearSelectedIcon","FinalArrow","ArrowRenderer","wrapper","onMenuToggle","defaultIsOpen","setIsInternalExpand","setExpanded","handleHover","iexpanded","isInternalExpand","handleFocus","setHasFocus","handleBlur","handleMouseEnter","handleMouseLeave","toggleExpanded","isLoading","handleClearSelected","labelledBy","onBlur","onMouseEnter","onMouseLeave","MultiSelectBox","transition","MultiSelect"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { ISelectProps, Option } from \"../lib/interfaces\";\n\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\",\n};\n\nconst defaultProps: Partial<ISelectProps> = {\n  value: [],\n  focusSearchOnOpen: true,\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: [] as Option[],\n};\n\ninterface MultiSelectContextProps extends ISelectProps {\n  t: (key: string) => string;\n}\n\ninterface MultiSelectProviderProps {\n  props: ISelectProps;\n  children;\n}\n\nconst MultiSelectContext = React.createContext<MultiSelectContextProps>(\n  {} as MultiSelectContextProps\n);\n\nexport const MultiSelectProvider = ({\n  props,\n  children,\n}: MultiSelectProviderProps) => {\n  const t = (key) => props.overrideStrings?.[key] || defaultStrings[key];\n\n  return (\n    <MultiSelectContext.Provider value={{ t, ...defaultProps, ...props }}>\n      {children}\n    </MultiSelectContext.Provider>\n  );\n};\n\nexport const useMultiSelect = () => React.useContext(MultiSelectContext);\n","/**\n * combines classNames in a friendly way\n *\n * @param {*} classes\n */\nexport const cn = (...classes) => classes.join(\" \");\n","import { useEffect, useRef } from \"react\";\n\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\nexport function useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n}\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // …and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","import React from \"react\";\n\nexport const Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { cn } from \"../lib/classnames\";\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultRenderer = css({\n  \"& input,& span\": {\n    verticalAlign: \"middle\",\n    margin: 0,\n  },\n  span: {\n    display: \"inline-block\",\n    paddingLeft: \"5px\",\n  },\n  \"&.disabled\": {\n    opacity: 0.5,\n  },\n});\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => (\n  <div className={cn(DefaultRenderer, \"item-renderer\", disabled && \"disabled\")}>\n    <input\n      type=\"checkbox\"\n      onChange={onClick}\n      checked={checked}\n      tabIndex={-1}\n      disabled={disabled}\n    />\n    <span>{option.label}</span>\n  </div>\n);\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { cn } from \"../lib/classnames\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked: boolean;\n  focused?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst ItemContainer = css({\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"block\",\n  padding: \"var(--rmsc-p)\",\n  outline: 0,\n  \"&:hover,&:focus\": {\n    background: \"var(--rmsc-hover)\",\n  },\n  \"&.selected\": {\n    background: \"var(--rmsc-selected)\",\n  },\n});\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  focused,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  useEffect(() => {\n    updateFocus();\n    // eslint-disable-next-line\n  }, [checked, focused]);\n\n  const toggleChecked = () => {\n    onSelectionChanged(!checked);\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  const updateFocus = () => {\n    if (focused && !disabled && itemRef) {\n      itemRef.current.focus();\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 13: // Enter\n      case 32: // Space\n        toggleChecked();\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <label\n      className={cn(ItemContainer, \"select-item\", checked && \"selected\")}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n      onKeyDown={handleKeyDown}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport { css } from \"goober\";\nimport React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  focusIndex: number;\n  options: Option[];\n  onClick: Function;\n}\n\nconst SelectListUl = css({\n  margin: 0,\n  paddingLeft: 0,\n  li: {\n    listStyle: \"none\",\n    margin: 0,\n  },\n});\n\nconst skipIndex = 2;\n\nconst SelectList = ({ options, focusIndex, onClick }: ISelectListProps) => {\n  const { disabled, value, onChange, ItemRenderer } = useMultiSelect();\n\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) {\n      return;\n    }\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <ul className={SelectListUl}>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n\n        return (\n          <li key={o?.key || i}>\n            <SelectItem\n              focused={focusIndex === tabIndex}\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={value.find((s) => s.value === o.value) ? true : false}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default SelectList;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport { css } from \"goober\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { cn } from \"../lib/classnames\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = -1,\n  NONE = 1,\n}\n\nconst SelectSearchContainer = css({\n  width: \"100%\",\n  position: \"relative\",\n  borderBottom: \"1px solid var(--rmsc-border)\",\n  input: {\n    height: \"var(--rmsc-h)\",\n    padding: \"0 var(--rmsc-p)\",\n    width: \"100%\",\n    outline: 0,\n    border: 0,\n  },\n});\n\nconst SearchClearButton = css({\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  background: \"none\",\n  border: 0,\n  padding: \"0 calc(var(--rmsc-p)/2)\",\n  \"[hidden]\": {\n    display: \"none\",\n  },\n});\n\nconst NoOptions = css({\n  padding: \"var(--rmsc-p)\",\n  textAlign: \"center\",\n  color: \"var(--rmsc-gray)\",\n});\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    focusSearchOnOpen,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n  } = useMultiSelect();\n\n  const searchInputRef = useRef<any>();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(\n    focusSearchOnOpen && !disableSearch ? FocusType.SEARCH : FocusType.NONE\n  );\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return filteredOptions.filter((o) =>\n        finalSelectedValues.includes(o.value)\n      );\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef?.current?.focus();\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  const handleKeyDown = (e) => {\n    switch (e.which) {\n      case 38: // Up Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(-1);\n        break;\n      case 40: // Down Arrow\n        if (e.altKey) {\n          return;\n        }\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(1, newFocus);\n    newFocus = Math.min(newFocus, options.length + 1);\n    setFocusIndex(newFocus);\n  };\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" onKeyDown={handleKeyDown}>\n      {!disableSearch && (\n        <div className={SelectSearchContainer}>\n          <input\n            autoFocus={focusSearchOnOpen}\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onKeyDown={(e) => e.stopPropagation()}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n            ref={searchInputRef}\n          />\n          <button\n            type=\"button\"\n            className={cn(SearchClearButton, \"search-clear-button\")}\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      {hasSelectAll && hasSelectableOptions && (\n        <SelectItem\n          focused={focusIndex === 1}\n          tabIndex={1}\n          checked={isAllOptionSelected}\n          option={selectAllOption}\n          onSelectionChanged={selectAllChanged}\n          onClick={() => handleItemClicked(1)}\n          itemRenderer={ItemRenderer}\n          disabled={disabled}\n        />\n      )}\n\n      {filteredOptions.length ? (\n        <SelectList\n          options={filteredOptions}\n          focusIndex={focusIndex}\n          onClick={(_e, index) => handleItemClicked(index)}\n        />\n      ) : (\n        <div className={cn(NoOptions, \"no-options\")}>{t(\"noOptions\")}</div>\n      )}\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","import React from \"react\";\n\nexport const Arrow = ({ expanded }) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-heading-dropdown-arrow gray\"\n  >\n    <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n  </svg>\n);\n","import React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\n\nexport const DropdownHeader = () => {\n  const { t, value, options, valueRenderer } = useMultiSelect();\n\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">{customText || t(\"selectSomeItems\")}</span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected ? t(\"allItemsAreSelected\") : getSelectedText())}\n    </span>\n  );\n};\n","import { css } from \"goober\";\nimport React from \"react\";\n\nconst Spinner = css({\n  animation: \"rotate 2s linear infinite\",\n\n  \"& .path\": {\n    stroke: \"var(--rmsc-border)\",\n    strokeWidth: \"4px\",\n    strokeLinecap: \"round\",\n    animation: \"dash 1.5s ease-in-out infinite\",\n  },\n\n  \"@keyframes rotate\": {\n    \"100%\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n\n  \"@keyframes dash\": {\n    \"0%\": {\n      strokeDasharray: \"1,150\",\n      strokeDashoffset: 0,\n    },\n    \"50%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-35\",\n    },\n    \"100%\": {\n      strokeDasharray: \"90,150\",\n      strokeDashoffset: \"-124\",\n    },\n  },\n});\n\nexport const Loading = ({ size = 24 }) => (\n  <span\n    style={{\n      width: size,\n      marginRight: \"0.2rem\",\n    }}\n  >\n    <svg\n      width={size}\n      height={size}\n      className={Spinner}\n      viewBox=\"0 0 50 50\"\n      style={{ display: \"inline\", verticalAlign: \"middle\" }}\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n    </svg>\n  </span>\n);\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport { css } from \"goober\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { useDidUpdateEffect } from \"../hooks/use-did-update-effect\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { cn } from \"../lib/classnames\";\nimport SelectPanel from \"../select-panel\";\nimport { Cross } from \"../select-panel/cross\";\nimport { Arrow } from \"./arrow\";\nimport { DropdownHeader } from \"./header\";\nimport { Loading } from \"./loading\";\n\nconst PanelContainer = css({\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  width: \"100%\",\n  paddingTop: \"8px\",\n  \".panel-content\": {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    borderRadius: \"var(--rmsc-radius)\",\n    background: \"var(--rmsc-bg)\",\n    boxShadow: \"0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1)\",\n  },\n});\n\nconst DropdownContainer = css({\n  position: \"relative\",\n  outline: 0,\n  backgroundColor: \"var(--rmsc-bg)\",\n  border: \"1px solid var(--rmsc-border)\",\n  borderRadius: \"var(--rmsc-radius)\",\n  \"&:focus-within\": {\n    boxShadow: \"var(--rmsc-main) 0 0 0 1px\",\n    borderColor: \"var(--rmsc-main)\",\n  },\n});\n\nconst DropdownHeading = css({\n  position: \"relative\",\n  padding: \"0 var(--rmsc-p)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"var(--rmsc-h)\",\n  cursor: \"default\",\n  outline: 0,\n  \".dropdown-heading-value\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    flex: 1,\n  },\n});\n\nconst ClearSelectedButton = css({\n  cursor: \"pointer\",\n  background: \"none\",\n  border: 0,\n  padding: 0,\n  display: \"flex\",\n});\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon,\n  } = useMultiSelect();\n\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    if (isInternalExpand) {\n      switch (e.which) {\n        case 27: // Escape\n        case 38: // Up Arrow\n          setExpanded(false);\n          wrapper?.current?.focus();\n          break;\n        case 32: // Space\n        case 13: // Enter Key\n        case 40: // Down Arrow\n          setExpanded(true);\n          break;\n        default:\n          return;\n      }\n    }\n    e.preventDefault();\n  };\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className={cn(DropdownContainer, \"dropdown-container\")}\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        className={cn(DropdownHeading, \"dropdown-heading\")}\n        onClick={toggleExpanded}\n      >\n        <div className=\"dropdown-heading-value\">\n          <DropdownHeader />\n        </div>\n        {isLoading && <Loading />}\n        {value.length > 0 && (\n          <button\n            type=\"button\"\n            className={cn(ClearSelectedButton, \"clear-selected-button\")}\n            onClick={handleClearSelected}\n            disabled={disabled}\n            aria-label={t(\"clearSelected\")}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className={cn(PanelContainer, \"dropdown-content\")}>\n          <div className=\"panel-content\">\n            <SelectPanel />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { css } from \"goober\";\nimport React from \"react\";\n\nimport { MultiSelectProvider } from \"../hooks/use-multi-select\";\nimport { cn } from \"../lib/classnames\";\nimport { ISelectProps } from \"../lib/interfaces\";\nimport Dropdown from \"./dropdown\";\n\nconst MultiSelectBox = css({\n  \"--rmscMain\": \"#4285f4\",\n  \"--rmscHover\": \"#f1f3f5\",\n  \"--rmscSelected\": \"#e2e6ea\",\n  \"--rmscBorder\": \"#ccc\",\n  \"--rmscGray\": \"#aaa\",\n  \"--rmscBg\": \"#fff\",\n  \"--rmscP\": \"10px\",\n  \"--rmscRadius\": \"4px\",\n  \"--rmscH\": \"38px\",\n\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\",\n  },\n  \".gray\": {\n    color: \"var(--rmsc-gray)\",\n  },\n});\n\nconst MultiSelect = (props: ISelectProps) => (\n  <MultiSelectProvider props={props}>\n    <div className={cn(MultiSelectBox, props.className || \"multi-select\")}>\n      <Dropdown />\n    </div>\n  </MultiSelectProvider>\n);\n\nexport default MultiSelect;\n"]},"metadata":{},"sourceType":"module"}