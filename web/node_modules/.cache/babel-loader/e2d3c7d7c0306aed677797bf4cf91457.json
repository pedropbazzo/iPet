{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedropbazzo/Documentos/iPet/web/src/components/Dropzone/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUpload } from 'react-icons/fi';\nimport './styles.css';\n\nconst Dropzone = ({\n  onImageLoaded\n}) => {\n  _s();\n\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const fileUrl = URL.createObjectURL(file);\n    setSelectedFileUrl(fileUrl);\n    onImageLoaded(file);\n  }, [onImageLoaded]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropzone\",\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), selectedFileUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"drop\",\n      src: selectedFileUrl,\n      alt: \"Point thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(FiUpload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), \"Clique para adicionar ou arraste a imagem do estabelecimento\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropzone, \"aXoul3NJlXn7gY4Jotk7UZrmG0s=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/home/pedropbazzo/Documentos/iPet/web/src/components/Dropzone/index.tsx"],"names":["React","useCallback","useState","useDropzone","FiUpload","Dropzone","onImageLoaded","selectedFileUrl","setSelectedFileUrl","onDrop","acceptedFiles","file","fileUrl","URL","createObjectURL","getRootProps","getInputProps","accept"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,cAAP;;AAMA,MAAMC,QAAyB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAEnD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMO,MAAM,GAAGR,WAAW,CAACS,aAAa,IAAI;AACxC,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AAEA,UAAME,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AAEAH,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACAN,IAAAA,aAAa,CAACK,IAAD,CAAb;AAEH,GARyB,EAQvB,CAACL,aAAD,CARuB,CAA1B;AAUA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCb,WAAW,CAAC;AAAEM,IAAAA,MAAF;AAAUQ,IAAAA,MAAM,EAAE;AAAlB,GAAD,CAAnD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,OAA6BF,YAAY,EAAzC;AAAA,4BACI,sBAAWC,aAAa,EAAxB;AAA4B,MAAA,MAAM,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ,EAGMT,eAAe,gBACX;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,eAA3B;AAA4C,MAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YADW,gBAEX;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YALV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7BD;;GAAMF,Q;UAcsCF,W;;;KAdtCE,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { FiUpload } from 'react-icons/fi'\n\nimport './styles.css';\n\ninterface Props {\n    onImageLoaded : (file: File) => void;\n}\n\nconst Dropzone: React.FC<Props> = ({onImageLoaded}) => {\n\n    const [selectedFileUrl, setSelectedFileUrl] = useState('')\n\n    const onDrop = useCallback(acceptedFiles => {\n        const file = acceptedFiles[0];\n\n        const fileUrl = URL.createObjectURL(file);\n\n        setSelectedFileUrl(fileUrl);\n        onImageLoaded(file);\n\n    }, [onImageLoaded])\n    \n    const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: 'image/*' })\n\n    return (\n        <div className=\"dropzone\"{...getRootProps()}>\n            <input {...getInputProps()} accept=\"image/*\" />\n\n            { selectedFileUrl\n                ? <img className=\"drop\" src={selectedFileUrl} alt=\"Point thumbnail\" />\n                : <p>\n                    <FiUpload />\n                Clique para adicionar ou arraste a imagem do estabelecimento\n            </p>\n            }\n        </div>\n    )\n}\n\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}